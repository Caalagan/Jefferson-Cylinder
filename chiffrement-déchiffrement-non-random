import random


#Fonction de tirage d'une chaine aléatoire constituée de chacune des 26 lettres de l'alphabet

def tirage():
    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    tirage = ""
    temp = ""
    for i in range(0, 26):
        temp = random.choice(alphabet)
        while temp in tirage:
            temp = random.choice(alphabet)
        tirage += temp
    tirage += "\n"
    return tirage



#Lecture du fichier : création d'un dictionnaire avec en clé le numéro de la ligne et en valeur la chaine de caractère
with open ("cylinderWiki.txt", "r") as fichier:
    dico = {}
    for i, ligne in enumerate(fichier):
        dico[i+1] = ligne

#Affichage du dictionnaire
print(dico)

#Demande de clé :
cle = [7,9,5,10,1,6,3,8,2,4]


#chiffrement d'une lettre (lettre située à la position +6 de la chaine de caractère)
def chiffrement(lettre, cle):
    cylindre = dico[cle]
    position = cylindre.find(lettre)
    position += 6
    if position > 25:
        position -= 26
    return cylindre[position]


#fonction déchiffrement
def dechiffrement(lettre, cle):
    cylindre = dico[cle]
    position = cylindre.find(lettre)
    position -= 6
    if position < 0:
        position += 26
    return cylindre[position]


#chiffrement d'une phrase
def chiffrement_phrase(phrase):
    chiffré = ""
    for i in range(len(phrase)):
        chiffré += chiffrement(phrase[i], cle[i])
    return chiffré

#déchiffrement d'une phrase
def dechiffrement_phrase(phrase):
    dechiffré = ""
    for i in range(len(phrase)):
        dechiffré += dechiffrement(phrase[i], cle[i])
    return dechiffré

#demander à l'utilisateur de rentrer une phrase et la met en majuscule
phrase = "Retreat Now"
phrase = phrase.replace(" ", "")
phrase = phrase.upper()
print("phrase : ", phrase)
crypté = chiffrement_phrase(phrase)
print("crypté : ", crypté)
décrypté = dechiffrement_phrase(crypté)
print("décrypté : ", décrypté)