import random

class chiffrement:

    def __init__(self, nombre_de_cylindre, phrase):
        self.n = nombre_de_cylindre
        self.phrase = phrase


    def tirage(self):
        alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        tirage = ""
        temp = ""
        for i in range(0, 26):
            temp = random.choice(alphabet)
            while temp in tirage:
                temp = random.choice(alphabet)
            tirage += temp
        tirage += "\n"
        return tirage
    

    def _get_dico_(self):
        #Ecriture dans un fichier txt de n ligne (pas besoin de clear ça le fait tout seul)
        with open ("cylindre.txt", "w+") as fichier:
            for i in range (n):
                fichier.write(tirage())

        #Lecture du fichier : création d'un dictionnaire avec en clé le numéro de la ligne et en valeur la chaine de caractère
        with open ("cylindre.txt", "r") as fichier:
            self.dico = {}
            for i, ligne in enumerate(fichier):
                self.dico[i+1] = ligne

        #Affichage du dictionnaire
        print(self.dico)

    def _get_cle_(self):
        #Génération d'un d'une clé : permutation des entier entre 1 et n 
        for i in range (n):
            self.cle = random.sample(range(1, n+1), n)

        #affichage clé
        print(self.cle)


    #chiffrement d'une lettre (lettre située à la position +6 de la chaine de caractère)
    def chiffrement(self, lettre, cle):
        cylindre = self.dico[cle]
        position = cylindre.find(lettre)
        position += 6
        if position > 25:
            position -= 26
        return cylindre[position]

    #chiffrement d'une phrase
    def chiffrement_phrase(self):
        chiffré = ""
        for i in range(len(self.phrase)):
            chiffré += chiffrement(self.phrase[i], self.cle[i])
        return chiffré

phrase = input("Votre phrase : ")
chiffrage = chiffrement(n, phrase)


class dechiffrement():
    #fonction déchiffrement
    def dechiffrement(lettre, cle):
        cylindre = dico[cle]
        position = cylindre.find(lettre)
        position -= 6
        if position < 0:
            position += 26
        return cylindre[position]

    #déchiffrement d'une phrase
    def dechiffrement_phrase(phrase):
        dechiffré = ""
        for i in range(len(phrase)):
            dechiffré += dechiffrement(phrase[i], cle[i])
        return dechiffré
    
phrase = input("Entrez votre phrase : ")
phrase = phrase.replace(" ", "")
phrase = phrase.upper()
n = phrase.count()


print("phrase : ", phrase)
ma_phrase = DicoCle(n)
print("crypté : ", crypté)
décrypté = dechiffrement_phrase(crypté)
print("décrypté : ", décrypté)